# checkout local
git-checkout(){
  # instead \r
  LF=$'\\\x0A'
  echo "\U1F34E git fetch"
  git fetch
  echo "\U1F34E git checkout"
  BRANCH=$(git branch -vv | grep -v "^*" | awk '{print $1}' | sed '1s/^/CREATE NEW BRANCH'"$LF"'/' | fzf +m --prompt="LOCAL_BRANCHES > ")
  if [ $BRANCH  = "CREATE NEW BRANCH" ]; then
    echo "\U1F4DD branch name"
    read NEW
  else
    git checkout $BRANCH
    MSG=$(git checkout -b $NEW 2>&1)
    if [[ $MSG = "error"* ]]; then
      echo "\U1F41B checkout error"
    else
      echo "\U1F34E git pull from "$BRANCH
      git pull origin $BRANCH
    fi
  fi
}

# checkout including remote branches, sorted by most recent commit, limit 30 last branches
git-checkout-remote(){
  BRANCH=$(git for-each-ref --count=30 --sort=-committerdate refs/heads/ --format="%(refname:short)"| fzf -d $(wc -l <<< $(git branch --all | grep -v HEAD)) +m)
  git checkout $(echo $BRANCH | sed "s/.* //" | sed "s#remotes/[^/]*/##")
}

# add commit
git-add-commit(){
  LF=$'\\\x0A'
  FILES=$(git status --short | sed '1s/^/ALL .'"$LF"'/' | fzf -m --prompt="SELECT_ADD_FILES (multi:tab) > ")
  git add $(echo $FILES | awk '{print $2}')
  echo "\U1F34E git add"
  echo $FILES
  echo "\U1F4DD commit message > "  
  read MSG
  git commit -m $MSG
}

# add commit for hrmos
git-hr-add-commit(){
  LF=$'\\\x0A'
  FILES=$(git status --short | sed '1s/^/ALL .'"$LF"'/' | fzf -m --prompt="SELECT_ADD_FILES (multi:tab) > ")
  git add $(echo $FILES | awk '{print $2}')
  echo "\U1F34E git add"
  echo $FILES
  JIRA_NO=$(git branch | grep "*" | grep -o "SBATS-[0-9]*")
  echo "\U1F4DD commit message after "$JIRA_NO" > "
  read MSG
  git commit -m $JIRA_NO" "$MSG
}

# pull from base brach
git-pull(){
  LF=$'\\\x0A'
  CURRENT_BRANCH=$(git branch | grep "*" | awk '{print $2}')
  BASE_BRANCH=$(git --no-pager reflog | awk '$3 == "checkout:"' | grep $CURRENT_BRANCH | awk '/moving from/ {print $6}' | sed '1s/^/'"$CURRENT_BRANCH$LF"'/' | uniq | fzf --prompt="BASE_BRANCH > ")
  echo "\U1F34E ---<<< start git pull from "$BASE_BRANCH"..."
  git pull origin $BASE_BRANCH
}

# push
git-push(){
  BRANCH=$(git branch -vv | grep "*" | awk '{print $2}')
  echo "\U1F34E ---<<< start git push to origin/"$BRANCH"..." 
  git push origin $BRANCH
}
